{"version":3,"file":"static/js/865.9a8e092c.chunk.js","mappings":"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","sources":["constants/ApiConstants.js","store/features/fileApiSlice.js","components/ShowUploadedData.js","pages/UploadData/UploadPage.js"],"sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport const API_ROUTES = {\n    LOGIN: '/login',\n    UPLOAD_FILE: '/uploadFile',\n    READ_FILE: '/readFiles',\n    TRACK_FILE: '/trackFiles',\n  };\n  ","import { API_ROUTES } from '../../constants/ApiConstants';\nimport { apiSlice } from '../api/apiSlice';\n\nexport const fileApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    uploadFile: builder.mutation({\n      query: (data) => ({\n        url: `${API_ROUTES.UPLOAD_FILE}`,\n        method: 'POST',\n        body: data\n      }),\n      transformResponse: (response) => response,\n    }),\n    getFiles: builder.query({\n        query: () => `${API_ROUTES.READ_FILE}`\n    }),\n    trackFile: builder.mutation({\n        query: (fileId) => ({\n          url:`${API_ROUTES.TRACK_FILE}`,\n          method: 'POST',\n          body: { fileId },\n        }),\n      }),\n  }),\n});\n\nexport const { useUploadFileMutation, useGetFilesQuery, useTrackFileMutation } = fileApiSlice;\n","import React from 'react';\nimport {\n  Typography,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  CircularProgress,\n  Box,\n  Alert,\n  Button\n} from '@mui/material';\nimport { Check as CheckIcon } from '@mui/icons-material';\nimport { useTrackFileMutation } from '../store/features/fileApiSlice';\n\nconst ShowUploadedData = ({ uploadedFiles, isLoading, fetchError, isFetchError, setRefreshFiles }) => {\n  const [trackFile] = useTrackFileMutation();\n\n  const handleLinkClick = async (fileId, url) => {\n    try {\n      await trackFile(fileId).unwrap();\n      setRefreshFiles(prev => !prev); // Trigger refetch of files\n      window.open(url, '_blank', 'noopener,noreferrer'); // Open the link in a new tab\n    } catch (error) {\n      console.error(\"Failed to track file view:\", error);\n    }\n  };\n\n  const tableRows = uploadedFiles.map((file) => (\n    <TableRow key={file.id}>\n      <TableCell>{file.filename}</TableCell>\n      <TableCell>{file.tags.join(', ')}</TableCell>\n      <TableCell>{new Date(file.uploadedAt).toLocaleString()}</TableCell>\n      <TableCell>{file.views}</TableCell>\n      <TableCell>\n        <Button\n          onClick={(e) => {\n            e.preventDefault(); // Prevent the default button behavior\n            handleLinkClick(file.id, file.url);\n          }}\n          sx={{\n            textDecoration: 'underline',\n            color: 'primary.main',\n            background: 'none',\n            padding: 0,\n            '&:hover': {\n              textDecoration: 'underline',\n            },\n          }}\n        >\n          View File\n        </Button>\n      </TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <TableContainer component={Paper} sx={{ marginTop: 4, maxWidth: { xs: '100%', sm: '80%' } }}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom sx={{ padding: '2rem'}}>\n        Uploaded Files\n      </Typography>\n      {isLoading ? (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: '150px' }}>\n          <CircularProgress />\n        </Box>\n      ) : isFetchError && fetchError ? (\n        <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"error\">\n          {fetchError?.data?.message || \"Failed to load files.\"}\n        </Alert>\n      ) : (\n        <Table>\n          <TableHead>\n            <TableRow sx={{ backgroundColor: '#ccc'}}>\n              <TableCell>File Name</TableCell>\n              <TableCell>Tags</TableCell>\n              <TableCell>Upload Date</TableCell>\n              <TableCell>File Views</TableCell>\n              <TableCell>Shareable Link</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableRows} {/* Render the array of table rows */}\n          </TableBody>\n        </Table>\n      )}\n    </TableContainer>\n  );\n};\n\nexport default ShowUploadedData;\n","import React, { useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Container,\n  Typography,\n  Box,\n  TextField,\n  IconButton,\n  Card,\n  CardMedia,\n  CardContent,\n  Grid,\n  Stack,\n  Paper,\n  Button,\n  CircularProgress,\n  Alert\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { useUploadFileMutation, useGetFilesQuery } from '../../store/features/fileApiSlice';\nimport ShowUploadedData from '../../components/ShowUploadedData';\n\nconst UploadPage = () => {\n  const [files, setFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [refreshFiles, setRefreshFiles] = useState(false); // New state to control refetching\n\n  const { data: filesData, error, isLoading: isFetchingFiles, isError: isFetchError, refetch } = useGetFilesQuery();\n  const [uploadData, { isError, error: uploadError, isSuccess, isLoading }] = useUploadFileMutation();\n\n  // Fetch uploaded files on component mount or when refreshFiles changes\n  useEffect(() => {\n    if (filesData) {\n      setUploadedFiles(filesData);\n    }\n  }, [filesData]);\n  useEffect(() => {\n    refetch();\n  }, [refreshFiles, refetch]); // Refetch when refreshFiles changes\n\n  const onDrop = (acceptedFiles) => {\n    const updatedFiles = acceptedFiles.map((file) => ({\n      file,\n      preview: URL.createObjectURL(file),\n      tags: '',\n    }));\n    setFiles((prevFiles) => [...prevFiles, ...updatedFiles]);\n  };\n\n  const handleTagChange = (index, event) => {\n    const newFiles = [...files];\n    newFiles[index].tags = event.target.value;\n    setFiles(newFiles);\n  };\n\n  const removeFile = (index) => {\n    const newFiles = files.filter((_, i) => i !== index);\n    setFiles(newFiles);\n  };\n\n  const uploadFiles = async () => {\n    const formData = new FormData();\n\n    files.forEach((fileObj, index) => {\n      formData.append('files', fileObj.file);\n      formData.append(`tags[${index}]`, fileObj.tags);\n    });\n\n    try {\n      const response = await uploadData(formData).unwrap();\n\n      if (response.message) {\n        refetch();\n        setFiles([])\n      } \n    } catch (error) {\n      console.error(\"Error uploading files:\", error);\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      files.forEach(file => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: 'image/*,video/*',\n  });\n\n  return (\n    <Stack\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        minHeight: { xs: 'calc(100vh)', paddingTop: '1rem' },\n      }}\n    >\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Paper elevation={3} sx={{ padding: 3 }}>\n          <Typography variant=\"h4\" align=\"center\" gutterBottom>\n            File Upload with Tags\n          </Typography>\n          <Box\n            {...getRootProps({ className: 'dropzone' })}\n            sx={{\n              border: '2px dashed #0087f7',\n              borderRadius: '5px',\n              padding: '20px',\n              textAlign: 'center',\n              cursor: 'pointer',\n              marginBottom: '20px',\n            }}\n          >\n            <input {...getInputProps()} />\n            <Typography variant=\"body1\">\n              Drag 'n' drop some files here, or click to select files\n            </Typography>\n          </Box>\n          <Grid container spacing={2}>\n            {files.map((uploadedFile, index) => (\n              <Grid item xs={12} sm={6} md={4} key={index}>\n                <Card>\n                  <CardMedia\n                    component={uploadedFile.file.type.startsWith('image/') ? 'img' : 'video'}\n                    src={uploadedFile.preview}\n                    controls={!uploadedFile.file.type.startsWith('image/')}\n                    height=\"140\"\n                    alt={uploadedFile.file.name}\n                  />\n                  <CardContent>\n                    <TextField\n                      fullWidth\n                      label=\"Add tags\"\n                      value={uploadedFile.tags}\n                      onChange={(event) => handleTagChange(index, event)}\n                    />\n                    <IconButton\n                      onClick={() => removeFile(index)}\n                      color=\"error\"\n                      aria-label=\"delete\"\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={uploadFiles}\n            fullWidth\n            sx={{ marginTop: 2 }}\n            startIcon={isLoading && <CircularProgress size={16} />}\n            disabled={isLoading || files.length === 0}\n          >\n            {isLoading ? \"Uploading...\" : \"Upload Files\"}\n          </Button>\n          {isError && (\n            <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"error\">\n              {uploadError?.data?.message || \"Failed to upload files.\"}\n            </Alert>\n          )}\n          {isSuccess && (\n            <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"success\">\n              Uploaded Successfully\n            </Alert>\n          )}\n        </Paper>\n      </Container>\n      {isFetchingFiles ? (\n        <CircularProgress />\n      ) : (\n        <ShowUploadedData\n          uploadedFiles={uploadedFiles}\n          isLoading={isFetchingFiles}\n          fetchError={error}\n          isFetchError={isFetchError}\n          setRefreshFiles={setRefreshFiles} // Pass the setter to ShowUploadedData\n        />\n      )}\n    </Stack>\n  );\n};\n\nexport default UploadPage;\n"],"names":["API_ROUTES","LOGIN","UPLOAD_FILE","READ_FILE","TRACK_FILE","fileApiSlice","apiSlice","injectEndpoints","endpoints","builder","uploadFile","mutation","query","data","url","method","body","transformResponse","response","getFiles","trackFile","fileId","useUploadFileMutation","useGetFilesQuery","useTrackFileMutation","_ref","_fetchError$data","uploadedFiles","isLoading","fetchError","isFetchError","setRefreshFiles","tableRows","map","file","_jsxs","TableRow","children","_jsx","TableCell","filename","tags","join","Date","uploadedAt","toLocaleString","views","Button","onClick","e","preventDefault","async","unwrap","prev","window","open","error","console","handleLinkClick","id","sx","textDecoration","color","background","padding","TableContainer","component","Paper","marginTop","maxWidth","xs","sm","Typography","variant","align","gutterBottom","Box","display","justifyContent","alignItems","minHeight","CircularProgress","Alert","icon","CheckIcon","fontSize","severity","message","Table","TableHead","backgroundColor","TableBody","UploadPage","_uploadError$data","files","setFiles","useState","setUploadedFiles","refreshFiles","filesData","isFetchingFiles","isError","refetch","uploadData","uploadError","isSuccess","useEffect","forEach","URL","revokeObjectURL","preview","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","updatedFiles","createObjectURL","prevFiles","accept","Stack","direction","paddingTop","Container","elevation","className","border","borderRadius","textAlign","cursor","marginBottom","Grid","container","spacing","uploadedFile","index","item","md","Card","CardMedia","type","startsWith","src","controls","height","alt","name","CardContent","TextField","fullWidth","label","value","onChange","event","handleTagChange","newFiles","target","IconButton","filter","_","i","removeFile","DeleteIcon","formData","FormData","fileObj","append","startIcon","size","disabled","length","ShowUploadedData"],"sourceRoot":""}