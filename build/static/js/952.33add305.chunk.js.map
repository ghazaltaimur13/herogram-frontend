{"version":3,"file":"static/js/952.33add305.chunk.js","mappings":"gJACO,MAAMA,EAAa,CACtBC,MAAO,SACPC,YAAa,cACbC,UAAW,aACXC,WAAY,c,iKCFT,MAAMC,E,QAAeC,EAASC,gBAAgB,CACnDC,UAAYC,IAAO,CACjBC,MAAOD,EAAQE,SAAS,CACtBC,MAAQC,IAAI,CACVC,IAAK,GAAGd,EAAAA,EAAWC,QACnBc,OAAQ,OACRC,KAAMH,IAERI,kBAAoBC,GAAaA,SAK1B,iBAAEC,GAAqBd,E,iCCCrB,SAASe,IACtB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAC7BK,GAAWC,EAAAA,EAAAA,MAGfC,GAEEC,QAASC,EACTN,MAAOO,IAEPd,IAoBJ,OACIe,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,UAAU,MACVC,WAAW,SACXC,eAAe,SACfC,GAAI,CACFC,UAAW,CACTC,GAAI,cACJC,UAAW,UAEbC,UAEHT,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAIH,UACpCI,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAW,EAAGV,GAAI,CAAEW,QAAS,GAAIP,SAAA,EACpCT,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACC,QAAQ,KAAKP,UAAU,KAAKQ,MAAM,SAAQV,SAAC,WAGvDI,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACT,UAAU,OAAOU,SAnCfC,UAInB,GAHAC,EAAMC,kBAGDrC,IAAUG,EAEb,YADAG,EAAS,6BAKXA,EAAS,IAET,MAAMgC,QAAsB7B,EAAU,CAACT,QAAOG,aAC3CmC,EAAc9C,MAAQ8C,EAAc9C,KAAK+C,aAC1ChC,GAASiC,EAAAA,EAAAA,IAAeF,EAAc9C,KAAK+C,aAC7C,EAoB0DrB,GAAI,CAAEuB,GAAI,GAAInB,SAAA,CAC3DjB,IACGQ,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACY,MAAM,QAAQX,QAAQ,QAAQC,MAAM,SAAQV,SACvDjB,KAGLQ,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACNC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAM,gBACNC,KAAK,QACLC,MAAOjD,EACPkD,SAAWC,GAAMlD,EAASkD,EAAEC,OAAOH,OACnCI,WAAS,KAEbxC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACNC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAM,WACNC,KAAK,WACLC,MAAO9C,EACP+C,SAAWC,GAAM/C,EAAY+C,EAAEC,OAAOH,UAE1CpC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACHN,KAAK,SACLF,WAAS,EACTf,QAAQ,YACRW,MAAM,UACNxB,GAAI,CAAEuB,GAAI,GAAInB,SACjB,aAICV,GAAaD,IACfE,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CAACC,MAAM3C,EAAAA,EAAAA,KAAC4C,EAAAA,EAAS,CAACC,SAAS,YAAcC,SAAS,QAAOrC,SAC5DV,UAOnB,C","sources":["constants/ApiConstants.js","store/features/authApiSlice.js","pages/LoginPage/LoginPage.js"],"sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport const API_ROUTES = {\n    LOGIN: '/login',\n    UPLOAD_FILE: '/uploadFile',\n    READ_FILE: '/readFiles',\n    TRACK_FILE: '/trackFiles',\n  };\n  ","import { API_ROUTES } from '../../constants/ApiConstants';\nimport { apiSlice } from '../api/apiSlice';\n\nexport const authApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    login: builder.mutation({\n      query: (data) => ({\n        url: `${API_ROUTES.LOGIN}`,\n        method: 'POST',\n        body: data,\n      }),\n      transformResponse: (response) => response,\n    }),\n  }),\n});\n\nexport const { useLoginMutation } = authApiSlice;\n","import React, { useState } from 'react';\nimport {\n    TextField,\n    Button,\n    Container,\n    Typography,\n    Paper,\n    Box,\n    Stack, \n    Alert\n  } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\n\nimport { useLoginMutation } from '../../store/features/authApiSlice';\nimport { setAccessToken } from '../../store/features/baseSlice';\nimport { useAppDispatch } from '../../store/hooks';\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const dispatch = useAppDispatch();\n\n  const [\n    loginData,\n    {\n      isError: errorCode,\n      error: errorResp,\n    },\n  ] = useLoginMutation();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    // Basic validation\n    if (!email || !password) {\n      setError('Both fields are required.');\n      return;\n    }\n\n    // Clear error and handle login logic here\n    setError('');\n\n    const loginResponse = await loginData({email, password})\n    if(loginResponse.data && loginResponse.data.accessToken){\n      dispatch(setAccessToken(loginResponse.data.accessToken));\n    }\n    // TODO: Add your login logic (e.g., API call)\n  };\n  return (\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        sx={{\n          minHeight: {\n            xs: 'calc(100vh)',\n            marginTop: '-5rem',\n          },\n        }}\n      >\n       <Container component=\"main\" maxWidth=\"xs\">\n            <Paper elevation={3} sx={{ padding: 3 }}>\n                <Typography variant=\"h5\" component=\"h1\" align=\"center\">\n                Login\n                </Typography>\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n                {error && (\n                    <Typography color=\"error\" variant=\"body2\" align=\"center\">\n                    {error}\n                    </Typography>\n                )}\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    label=\"Email Address\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    autoFocus\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    label=\"Password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    sx={{ mt: 2 }}\n                >\n                    Login\n                </Button>\n                </Box>\n                { errorResp && errorCode && (\n                <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"error\">\n                  {errorResp}\n                </Alert> )\n                }\n            </Paper>\n        </Container>\n      </Stack>\n  );\n}\n"],"names":["API_ROUTES","LOGIN","UPLOAD_FILE","READ_FILE","TRACK_FILE","authApiSlice","apiSlice","injectEndpoints","endpoints","builder","login","mutation","query","data","url","method","body","transformResponse","response","useLoginMutation","LoginPage","email","setEmail","useState","password","setPassword","error","setError","dispatch","useAppDispatch","loginData","isError","errorCode","errorResp","_jsx","Stack","direction","alignItems","justifyContent","sx","minHeight","xs","marginTop","children","Container","component","maxWidth","_jsxs","Paper","elevation","padding","Typography","variant","align","Box","onSubmit","async","event","preventDefault","loginResponse","accessToken","setAccessToken","mt","color","TextField","margin","required","fullWidth","label","type","value","onChange","e","target","autoFocus","Button","Alert","icon","CheckIcon","fontSize","severity"],"sourceRoot":""}