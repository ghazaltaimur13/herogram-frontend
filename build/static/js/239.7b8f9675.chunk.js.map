{"version":3,"file":"static/js/239.7b8f9675.chunk.js","mappings":"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","sources":["constants/ApiConstants.js","pages/LoginPage/LoginPage.js","store/features/authApiSlice.js"],"sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport const API_ROUTES = {\n    LOGIN: '/login',\n    UPLOAD_FILE: '/uploadFile',\n    READ_FILE: '/readFiles',\n    TRACK_FILE: '/trackFiles',\n    SIGNUP: '/signup',\n  };\n  ","import React, { useState } from 'react';\nimport {\n  TextField,\n  Button,\n  Container,\n  Typography,\n  Paper,\n  Box,\n  Stack,\n  Alert,\n} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { Link } from 'react-router-dom'; // Import Link\nimport { useLoginMutation } from '../../store/features/authApiSlice';\nimport { setAccessToken } from '../../store/features/baseSlice';\nimport { useAppDispatch } from '../../store/hooks';\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const dispatch = useAppDispatch();\n\n  const [loginData, { isError: errorCode, error: errorResp }] = useLoginMutation();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    // Basic validation\n    if (!email || !password) {\n      setError('Both fields are required.');\n      return;\n    }\n\n    // Clear error and handle login logic here\n    setError('');\n\n    const loginResponse = await loginData({ email, password });\n    if (loginResponse.data && loginResponse.data.accessToken) {\n      dispatch(setAccessToken(loginResponse.data.accessToken));\n    }\n  };\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        minHeight: {\n          xs: 'calc(100vh)',\n          marginTop: '-5rem',\n        },\n      }}\n    >\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Paper elevation={3} sx={{ padding: 3 }}>\n          <Typography variant=\"h5\" component=\"h1\" align=\"center\">\n            Login\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            {error && (\n              <Typography color=\"error\" variant=\"body2\" align=\"center\">\n                {error}\n              </Typography>\n            )}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Email Address\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{ mt: 2 }}\n            >\n              Login\n            </Button>\n            <Typography variant=\"body2\" align=\"center\" sx={{ mt: 2 }}>\n              Donâ€™t have an account?{' '}\n              <Link to=\"/signup\" style={{ textDecoration: 'underline', color: 'blue' }}>\n                Sign Up\n              </Link>\n            </Typography>\n          </Box>\n          {errorResp && errorCode && (\n            <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"error\">\n              {errorResp}\n            </Alert>\n          )}\n        </Paper>\n      </Container>\n    </Stack>\n  );\n}\n","import { API_ROUTES } from '../../constants/ApiConstants';\nimport { apiSlice } from '../api/apiSlice';\n\nexport const authApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    login: builder.mutation({\n      query: (data) => ({\n        url: `${API_ROUTES.LOGIN}`,\n        method: 'POST',\n        body: data,\n      }),\n      transformResponse: (response) => response,\n    }),\n    signup: builder.mutation({\n      query: (data) => ({\n        url: `${API_ROUTES.SIGNUP}`,\n        method: 'POST',\n        body: data,\n      }),\n      transformResponse: (response) => response,\n    }),\n  }),\n});\n\nexport const { useLoginMutation, useSignupMutation } = authApiSlice;\n"],"names":["API_ROUTES","LOGIN","UPLOAD_FILE","READ_FILE","TRACK_FILE","SIGNUP","LoginPage","email","setEmail","useState","password","setPassword","error","setError","dispatch","useAppDispatch","loginData","isError","errorCode","errorResp","useLoginMutation","_jsx","Stack","direction","alignItems","justifyContent","sx","minHeight","xs","marginTop","children","Container","component","maxWidth","_jsxs","Paper","elevation","padding","Typography","variant","align","Box","onSubmit","async","event","preventDefault","loginResponse","data","accessToken","setAccessToken","mt","color","TextField","margin","required","fullWidth","label","type","value","onChange","e","target","autoFocus","Button","Link","to","style","textDecoration","Alert","icon","CheckIcon","fontSize","severity","authApiSlice","apiSlice","injectEndpoints","endpoints","builder","login","mutation","query","url","method","body","transformResponse","response","signup","useSignupMutation"],"sourceRoot":""}